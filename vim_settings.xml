<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks>
      <mark key="M" line="150" column="27" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/view/StudentListing.java" protocol="file" />
    </globalmarks>
    <filemarks>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/repository/UserRepository.java" timestamp="1536686388658">
        <mark key="[" line="23" column="23" />
        <mark key="]" line="23" column="23" />
        <mark key="." line="23" column="23" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/generator/src/main/scala/ng/acada/docgen/adt/DocNode.scala" timestamp="1536777882374">
        <mark key="[" line="66" column="20" />
        <mark key="]" line="66" column="23" />
        <mark key="^" line="66" column="23" />
        <mark key="." line="66" column="23" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/component/AcadaEmailValidator.scala" timestamp="1536687313678">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="13" column="8" />
        <mark key="]" line="13" column="19" />
        <mark key="." line="13" column="19" />
        <mark key="^" line="13" column="19" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/rest/QuestionController.java" timestamp="1536703649646">
        <mark key="'" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/mathjax/MathJaxPlaceHolder.scala" timestamp="1536775154020">
        <mark key="[" line="5" column="181" />
        <mark key="]" line="5" column="17" />
        <mark key="." line="5" column="17" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/rest/QuizResourceAssembler.scala" timestamp="1536703132469">
        <mark key="[" line="14" column="0" />
        <mark key="]" line="14" column="0" />
        <mark key="." line="14" column="0" />
        <mark key="^" line="26" column="126" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/repository/ExamSubjectRepository.java" timestamp="1536776458028">
        <mark key="[" line="22" column="0" />
        <mark key="]" line="22" column="0" />
        <mark key="." line="22" column="0" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/repository/QuestionRepository.java" timestamp="1536776476165">
        <mark key="[" line="15" column="0" />
        <mark key="]" line="15" column="0" />
        <mark key="." line="15" column="0" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/view/ExamInfoQuestionsPreview.scala" timestamp="1536776363245">
        <mark key="[" line="7" column="0" />
        <mark key="]" line="7" column="0" />
        <mark key="." line="7" column="0" />
        <mark key="^" line="7" column="0" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/htmlpdf/HtmlpdfComponent.scala" timestamp="1536775071471">
        <mark key="[" line="11" column="31" />
        <mark key="]" line="11" column="31" />
        <mark key="." line="11" column="31" />
        <mark key="^" line="11" column="31" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/service/QuestionService.java" timestamp="1536705246172">
        <mark key="'" line="857" column="37" />
        <mark key="[" line="668" column="60" />
        <mark key="]" line="668" column="69" />
        <mark key="^" line="668" column="69" />
        <mark key="." line="668" column="69" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/service/ScalaUtil.scala" timestamp="1536703108757">
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="0" />
        <mark key="." line="4" column="0" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/view/ExamInfoQuestionsPreview.java" timestamp="1536776369006">
        <mark key="'" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/service/QuizService.java" timestamp="1536683258634">
        <mark key="[" line="210" column="24" />
        <mark key="]" line="210" column="24" />
        <mark key="^" line="210" column="24" />
        <mark key="." line="210" column="24" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/rest/ExamQuestionController.java" timestamp="1536705216213">
        <mark key="'" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/view/StudentListing.java" timestamp="1536777521793" />
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/mathquill/FormularEditor.java" timestamp="1536776103775">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="28" column="0" />
        <mark key="]" line="28" column="0" />
        <mark key="." line="28" column="0" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/view/SystemSettingsUI.java" timestamp="1536694175758">
        <mark key="[" line="118" column="8" />
        <mark key="]" line="118" column="20" />
        <mark key="." line="118" column="20" />
        <mark key="^" line="118" column="20" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/service/AccessCheckerService.scala" timestamp="1536775840387">
        <mark key="[" line="124" column="70" />
        <mark key="]" line="124" column="53" />
        <mark key="^" line="124" column="53" />
        <mark key="." line="124" column="53" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/rest/ExamQuestionController.scala" timestamp="1536774967079">
        <mark key="'" line="146" column="0" />
        <mark key="[" line="105" column="115" />
        <mark key="]" line="106" column="5" />
        <mark key="." line="106" column="5" />
        <mark key="^" line="106" column="5" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/generator/src/main/scala/ng/acada/docgen/adt/DocumentGenerator.scala" timestamp="1536777828871" />
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/mathquill/FormularEditor.scala" timestamp="1536776346368">
        <mark key="[" line="7" column="0" />
        <mark key="]" line="7" column="58" />
        <mark key="." line="36" column="50" />
        <mark key="^" line="41" column="43" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/service/UserService.java" timestamp="1536693547023">
        <mark key="'" line="823" column="0" />
        <mark key="[" line="154" column="0" />
        <mark key="]" line="154" column="0" />
        <mark key="^" line="466" column="79" />
        <mark key="." line="154" column="0" />
      </file>
      <file name="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/rest/QuestionController.scala" timestamp="1536730057684">
        <mark key="'" line="63" column="0" />
        <mark key="[" line="32" column="106" />
        <mark key="]" line="32" column="106" />
        <mark key="." line="32" column="106" />
        <mark key="^" line="61" column="56" />
      </file>
    </filemarks>
    <jumps>
      <jump line="13" column="52" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/service/ExamInfoService.java" />
      <jump line="640" column="35" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/service/QuestionService.java" />
      <jump line="857" column="37" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/service/QuestionService.java" />
      <jump line="146" column="27" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/view/StudentListing.java" />
      <jump line="150" column="70" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/view/StudentListing.java" />
      <jump line="45" column="11" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/view/StudentListing.java" />
      <jump line="301" column="15" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/component/CBTUserEditForm.java" />
      <jump line="16" column="2" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/component/AcadaEmailValidator.scala" />
      <jump line="492" column="8" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/service/UserService.java" />
      <jump line="0" column="0" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/service/UserService.java" />
      <jump line="858" column="0" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/service/UserService.java" />
      <jump line="5" column="0" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/component/AcadaEmailValidator.scala" />
      <jump line="18" column="0" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/component/AcadaEmailValidator.scala" />
      <jump line="0" column="0" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/component/AcadaEmailValidator.scala" />
      <jump line="26" column="42" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/rest/QuizResourceAssembler.scala" />
      <jump line="70" column="0" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/rest/QuestionController.scala" />
      <jump line="53" column="63" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/rest/QuestionController.java" />
      <jump line="0" column="0" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/rest/QuestionController.java" />
      <jump line="139" column="0" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/rest/ExamQuestionController.scala" />
      <jump line="56" column="1" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/rest/ExamQuestionController.scala" />
      <jump line="145" column="0" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/rest/ExamQuestionController.scala" />
      <jump line="55" column="13" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/rest/ExamQuestionController.java" />
      <jump line="0" column="0" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/rest/ExamQuestionController.java" />
      <jump line="16" column="28" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/mathquill/FormularEditor.java" />
      <jump line="0" column="0" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/mathquill/FormularEditor.java" />
      <jump line="21" column="0" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/view/ExamInfoQuestionsPreview.java" />
      <jump line="0" column="0" filename="$USER_HOME$/proj/CBTServer/service/src/main/java/com/pureworks/cbt/ui/view/ExamInfoQuestionsPreview.java" />
    </jumps>
    <registers>
      <register name="0" type="4">
        <text>import com.vaadin.server.Sizeable.Unit.{PERCENTAGE, PIXELS}</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="&quot;" type="4">
        <text>Seq</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">Ly8gICAgQFF1ZXJ5KCJzZWxlY3QgcSBmcm9tIFF1ZXN0aW9uIHEgd2hlcmUgcS5leGFtSW5mby5pZCBpbiAoPzEpIikKLy8gICAgUGFnZTxRdWVzdGlvbj4gZmluZEJ5RXhhbUluZm9JZEluKFBhZ2VhYmxlIHBnLCBTZXQ8TG9uZz4gZXhhbUluZm9JZHMpOwovLwovLwovLyAgICBAUXVlcnkoInNlbGVjdCBxIGZyb20gUXVlc3Rpb24gcSB3aGVyZSBxLmV4YW1JbmZvLmlkID0gPzEiKQovLyAgICBQYWdlPFF1ZXN0aW9uPiBmaW5kQnlFeGFtSW5mb0lkKFBhZ2VhYmxlIHBnLCBMb25nIGV4YW1JbmZvSWQsIFNwZWNpZmljYXRpb248UXVlc3Rpb24+IHNwZWNpZmljYXRpb24pOwoKLy8gICAgUGFnZTxRdWVzdGlvbj4JZmluZEFsbChTcGVjaWZpY2F0aW9uPFF1ZXN0aW9uPiBzcGVjLCBQYWdlYWJsZSBwZyk7Cg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgIC8vICAgIExpc3Q8RXhhbVN1YmplY3Q+IGZpbmRCeU5hbWVDb250YWluaW5nKFN0cmluZyBuYW1lKTsKCgoKLy8gICAgQFF1ZXJ5KCJzZWxlY3QgZGlzdGluY3QgdXBwZXIocy5zdWJqZWN0KSBmcm9tIEV4YW1TdWJqZWN0IHMiKQovLyAgICBDb2xsZWN0aW9uPFN0cmluZz4gZmV0Y2hBbGxTdWJqZWN0TmFtZUJ5U2Nob29sKCk7Cg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">aW1wb3J0IHNjYWxhLmNvbGxlY3Rpb24uSmF2YUNvbnZlcnRlcnMuXwo=</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICBwcml2YXRlIGRlZiBnZXRDb250ZW50VGV4dCA9ICIxLlx0SW4gYSByZXNvbmFuY2UgdHViZSBleHBlcmltZW50LCBhIHR1YmUgb2YgZml4ZWQgbGVuZ3RoIGlzIGNsb3NlZCBhdCBvbmUgZW5kIGFuZCBzZXZlcmFsIHR1cm5pbmcgZm9ya3Mgb2YgaW5jcmVhc2luZyBmcmVxdWVuY3kgdXNlZCB0byBvYnRhaW4gcmVzb25hbmNlIGF0IHRoZSBvcGVuIGVuZC4gSWYgdGhlIHR1cm5pbmcgZm9yayB3aXRoIHRoZSBsb3dlc3QgZnJlcXVlbmN5IHdoaWNoIGdhdmUgcmVzb25hbmNlIGhhZCBhIGZyZXF1ZW5jeSDGkjEgYW5kIHRoZSBuZXh0IHR1cm5pbmcgZm9yayB0byBnaXZlIHJlc29uYW5jZSBoYWQgYSBmcmVxdWVuY3kgxpIyLCBmaW5kIHRoZSByYXRpbyDGkjIvxpIxLlxuIiArICJcbiIgKyAiQS5cdDhcbiIgKyAiQi5cdDNcbiIgKyAiQy5cdDIgXG4iICsgIkQuXHTCvSBcbiIgKyAiRS5cdDEvM1xuIiArICJcbiIgKyAiMi4gXHRXaGljaCBvZiB0aGUgZm9sbG93aW5nIGlzIE5PVCBhIHZlY3RvciBxdWFudGl0eVxuIiArICJcbiIgKyAiQS4gXHQgRm9yY2VcbiIgKyAiQi5cdEFsdGl0dWRlIFxuIiArICJDLlx0IFdlaWdodFxuIiArICJELiBcdERpc3BsYWNlbWVudFxuIiArICJFLiBcdEFjY2VsZXJhdGlvbi5cbiIgKyAiXG4iICsgIjMuXG4iICsgIkZpZy4gMSBDb25zaWRlciB0aGUgdGhyZWUgZm9yY2VzIGFjdGluZyBhdCDGnyBhbmQgaW4gZXF1aWxpYnJpdW0gIGFzIHNob3duIGluIEZpZy4gMS4gV2hpY2ggb2YgdGhlIGZvbGxvd2luZyBlcXVhdGlvbiBpcy9hcmUgQ09SUkVDVD8gXG4iICsgIkkuIFAxY29zxp8xID0gUDFjb3PGnzJcbiIgKyAiSUkuIFAzID0gUDFjb3PGnzEgKyBQMmNvc8afMlxuIiArICJJSUkuIFAxIHNpbiDGnzEgPSBQMiBzaW4gxp8yXG4iICsgIkEuICAgSSBvbmx5IFxuIiArICJCLiAgIElJIG9ubHkgXG4iICsgIkMuICBcdElJSSBvbmx5IFxuIiArICJELiAgXHRJSSBhbmQgSUlJIG9ubHkgICBcbiIgKyAiRS4gICBcdEkgYW5kIElJSSBvbmx5XG4iICsgIlxuIiArICI0Llx0V2hpY2ggb2YgdGhlIGZvbGxvd2luZyBzdGF0ZW1lbnRzIGFib3V0IGZyaWN0aW9uIGl0IE5PVCBjb3JyZWN0PyBcbiIgKyAiXG4iICsgIkEuIFx0VGhlIGZvcmNlIG9mIGtpbmV0aWMgZnJpY3Rpb24gaXMgbGVzcyB0aGFuIHRoZSBmb3JjZSBvZiBzdGF0aWMgZnJpY3Rpb24uXG4iICsgIiBCLiBcdFRoZSBmb3JjZSBvZiBraW5ldGljIGZyaWN0aW9uIGJldHdlZW4gdHdvIHN1cmZhY2VzIGlzIGluZGVwZW5kZW50IG9mIHRoZSBhcmVhcyBpbiBjb250YWN0IHByb3ZpZGVkIHRoZSBub3JtYWwgcmVhY3Rpb24gaXMgdW5jaGFuZ2VkLiBcbiIgKyAiQy5cdFRoZSBmb3JjZSBvZiByb2xsaW5nIGZyaWN0aW9uIGJldHdlZW4gdHdvIHN1cmZhY2VzIGlzIGxlc3MgdGhhbiB0aGUgZm9yY2Ugb2Ygc2xpZGluZyBmcmljdGlvbi4gXG4iICsgIkQuXHQgVGhlIGFuZ2xlIG9mIGZyaWN0aW9uIGlzIHRoZSBhbmdsZSBiZXR3ZWVuIHRoZSBub3JtYWwgcmVhY3Rpb24gYW5kIHRoZSBmb3JjZSBmcmljdGlvbi4gXG4iICsgIkUuIFx0RnJpY3Rpb24gbWF5IGJlIHJlZHVjZWQgYnkgbHVicmljYXRpb24uXG4iICsgIlxuIiArICI1LlxuIiArICJBIGJyaWNrIGF0IHJlc3Qgb24gYSBob3Jpem9udGFsIHRhYmxlIGlzIHB1bGxlZCBieSBhIGhvcml6b250YWwgY29yZCwgYXMgc2hvd24gaW4gRmlnLiAyLiBUaGUgZm9yY2Ugb2YgZnJpY3Rpb24gb24gdGhlIGJyaWNrIFxuIiArICJBLlx0IEluY3JlYXNlIGlmIHRoZSBwdWxsIGluY3JlYXNlcyBidXQgdGhlIGJyaWNrIGRvZXMgbm90IG1vdmUuIFxuIiArICJCLiBcdElzIGRpcmVjdGx5IGhvcml6b250YWwgdG8gdGhlIHJpZ2h0IFxuIiArICJDLlx0IERlY3JlYXNlcyBpZiBhbiBpZGVudGljYWwgYnJpY2sgaXMgcGxhY2VkIG9uIHRoZSBmaXJzdC4gXG4iICsgIkQuXHQgSXMgemVybyBpZiB0aGUgYnJpY2sgaXMgcHVsbGVkIGhhcmQgZW5vdWdoIHRvIG1ha2UgaXQgc2xpZGUuXG4iICsgIkUuIFx0Q2hhbmdlIGlmIHRoZSBicmljayBpcyB0dXJuZWQgb24gaXRzIHNpZGUuXG4iICsgIjYuXHQgVGhlIGZvcmNlIHdpdGggd2hpY2ggYW4gb2JqZWN0IGlzIGF0dHJhY3RlZCB0byB0aGUgZWFydGggaXMgY2FsbGVkIGl0cyBcbiIgKyAiQS4gXHRBY2NlbGVyYXRpb25cbiIgKyAiQi4gXHRNYXNzXG4iICsgIkMuICBcdEdyYXZpdHlcbiIgKyAiRC4gICBcdEltcHVsc2VcbiIgKyAiRS4gICBcdFdlaWdodC5cbiIgKyAiXG4iICsgIjcuXHQgVGhlIHJlZnJhY3RpdmUgaW5kZXggb2YgYSBsaXF1aWQgaXMgMS41LiBJZiB0aGUgdmVsb2NpdHkgb2YgbGlnaHQgaW4gdmFjdXVtIGlzIDMuMCB4IDEwOG1zLTEsIHRoZSB2ZWxvY2l0eSBvZiBsaWdodCBpbiB0aGUgbGlxdWlkIGlzXG4iICsgIkEuIFx0MS41IHggMTAzbSBzLTFcbiIgKyAiIEIuIFx0Mi4wIHggMTAzbSBzLTFcbiIgKyAiQy4gXHQzLjAgeCAxMDNtIHMtMVxuIiArICJELiBcdDQuNSB4IDEwM20gcy0xXG4iICsgIkUuIFx0OS4wIHggMTAzbSBzLTFcbiIgKyAiXG4iICsgIjguXHQgSWYgdGhlIHJlbGF0aXZlIGRlbnNpdHkgb2YgYSBtZXRhbCBpcyAxOSwgd2hhdCB3aWxsIGJlIHRoZSBtYXNzIG9mIDIwY20zIG9mIHRoZSBtZXRhbCB3aGVuIGltbWVyc2VkIGluIHdhdGVyPyBcbiIgKyAiQS5cdDM4MGcgXG4iICsgIkIuIFx0NDAwZ1xuIiArICJDLiBcdDM2MGcgXG4iICsgIkQuICBcdDM5ZyBcbiIgKyAiRS4gXHQxODBnXG4iICsgIlxuIiArICI5LiBcdFdoaWNoIG9mIHRoZSBmb2xsb3dpbmcgc3RhdGVtZW50cyBhYm91dCBsaXF1aWQgcHJlc3N1cmUgaXMgTk9UIGNvcnJlY3Q/IFRoZSBwcmVzc3VyZSBcbiIgKyAiQS4gXHRhdCBhIHBvaW50IGluIGEgbGlxdWlkIGlzIHByb3BvcnRpb25hbCB0byB0aGUgZGVwdGguIFxuIiArICJCLiBcdGF0IGFueSBwb2ludCBpbiBhIGxpcXVpZCBpcyB0aGUgc2FtZSBhdCB0aGUgc2FtZSBsZXZlbC4gXG4iICsgIkMuIFx0aXMgZXhlcnRlZCBlcXVhbGx5IGluIGFsbCBkaXJlY3Rpb25zIGF0IGFueSBwb2ludC5cbiIgKyAiRC4gXHRvZiBhIGxpcXVpZCBhdCBhbnkgcG9pbnQgb24gdGhlIHdhbGwgb2YgaXRzNjU3Y29udGFpbmVyIGFjdHMgaW4gYSBkaXJlY3Rpb24gcGVycGVuZGljdWxhciB0byB0aGUgd2FsbC5cbiIgKyAiRS4gXHRhdCBhIHBhcnRpY3VsYXIgZGVwdGggZGVwZW5kcyBvbiB0aGUgc2hhcGUgb2YgdGhlIHZlc3NlbC5cbiIgKyAiXG4iICsgIjEwLiBcdEEgc2hpcCB0cmF2ZWxpbmcgdG93YXJkcyBhIGNsaWZmIHJlY2VpdmVzIHRoZSBlY2hvIG9mIGl0cyB3aGlzdGxlIGFmdGVyIDMuNSBzZWNvbmRzLiBBIHNob3J0IHdoaWxlIGxhdGVyLCBpdCByZWNlaXZlcyB0aGUgZWNobyBhZnRlciAyLjUgc2Vjb25kcy4gSWYgdGhlIHNwZWVkIG9mIHNvdW5kIGluIGFpciB1bmRlciB0aGUgcHJldmFpbGluZyBjb25kaXRpb25zIGlzIDI1MG0gcy0xLCBob3cgbXVjaCBjbG9zZXIgaXMgdGhlIHNoaXAgdG8gdGhlIGNsaWZmPyBcbiIgKyAiQS4gXHQxMCBtXG4iICsgIkIuXHQxMjUgbSBcbiIgKyAiQy5cdDE3NSBtXG4iICsgIkQuIFx0MzUwIG0gXG4iICsgIkUuXHQxLDAwMCBtXG4iICsgIlxuIiArICIxMS4gXHRXaGljaCBvZiB0aGUgZm9sbG93aW5nIGlzIE5PVCBjb3JyZWN0PyBcbiIgKyAiSS4gXHRUaGUgcGl0Y2ggb2YgYSBzb3VuZCBub3RlIGRlcGVuZHMgb24gdGhlIGZyZXF1ZW5jeSBvZiB2aWJyYXRpb25zLiBcbiIgKyAiSUkuIFx0VGhlIGludGVuc2l0eSBvZiBhIHNvdW5kIG5vdGUgaXMgcHJvcG9ydGlvbmFsIHRvIHRoZSBhbXBsaXR1ZGUgb2YgdmlicmF0aW9ucy4gXG4iICsgIklJSS4gXHRCZWF0cyBhcmUgcHJvZHVjZXMgYnkgdHdvIHNvdXJjZXMgb2Ygc291bmQgYmVjYXVzZSBvbmUgd2F2ZSBpcyB0cmF2ZWxsaW5nIGZhc3RlciB0aGFuIHRoZSBvdGhlci4gXG4iICsgIklWLiBcdFdoZW4gdHdvIHNvdXJjZXMgb2Ygc291bmQgb2YgZnJlcXVlbmNpZXMgNTAwIEh6IGFuZCA1MDIgSHogYXJlIHNvdW5kZWQgdG9nZXRoZXIsIGEgbmVhdCBmcmVxdWVuY3kgb2YgMiBIeiBpcyBvYnNlcnZlZC4gXG4iICsgIlYuIFx0VGhlIGZpcnN0IGhhcm1vbmljIG9mIGEgbm90ZSBoYXMgZG91YmxlIHRoZSBmcmVxdWVuY3kgb2YgdGhlIGZ1bmRhbWVudGFsIG5vdGUuIFxuIiArICJBLiBcdEkgYW5kIElJIFxuIiArICJCLlx0SUkgYW5kIElJSSBcbiIgKyAiQy5cdEkgYW5kIElJIFxuIiArICJELlx0SUlJIGFuZCBJViBcbiIgKyAiRS5cdElWIGFuZCBWLlxuIiArICJcbiIgKyAiMTIuIFx0V2hpY2ggb2YgdGhlIGZvbGxvd2luZyBzdGF0ZW1lbnRzIGFib3V0IGRlZmVjdHMgb2YgdmlzaW9uIGlzLyBhcmUgQ09SUkVDVCBcbiIgKyAiSS4gXHRGb3IgYSBsb25nIHNpZ2h0ZWQgcGVyc29uLCBjbG9zZSBvYmplY3RzIGFwcGVhciBibHVycmVkLiBcbiIgKyAiSUkuIFx0Rm9yIGEgc29ydCBzaWdodGVkIHBlcnNvbiwgZGlzdGFudCBvYmplY3RzIGFwcGVhciBibHVycmVkLiBcbiIgKyAiSUlJLiBcdFNob3J0IHNpZ2h0IGlzIGNvcnJlY3RlZCBieSB1c2luZyBhIHBhaXIgb2YgY29udmVyZ2luZyBsZW5zZXMuXG4iICsgIkEuXHRJIG9ubHlcbiIgKyAiQi4gXHRJSSBvbmx5IFxuIiArICJDLiBcdEkgYW5kIElJIG9ubHlcbiIgKyAiRC4gXHRJSSBhbmQgSUlJIG9ubHkgXG4iICsgIkUuIFx0SSwgSUkgYW5kIElJSS5cbiIgKyAiXG4iICsgIjEzLiBcdFRoZSByYW5nZSBvZiB3YXZlbGVuZ3RocyBvZiB0aGUgdmlzaWJsZSBzcGVjdHJ1bSBpcyA0MDBubSDigJMgNzAwbm0uIFRoZSB3YXZlbGVuZ3RoIG9mIGdhbW1hIHJheXMgaXMgXG4iICsgIkEuIFx0TG9uZ2VyIHRoYW4gNzAwbm0gXG4iICsgIkIuIFx0U2hvcnRlciB0aGFuIDcwMG5tIGJ1dCBsb25nZXIgdGhhbiA0MDBubSBcbiIgKyAiQy4gXHQ1NTBubSBcbiIgKyAiRC4gXHRTaG9ydGVyIHRoYW4gNDAwbm0gXG4iICsgIkUuXHQgSW5maW5pdGVcbiIgKyAiXG4iICsgIjE0LiBcdElmIHRoZSBwcmVzc3VyZSBvbiAxMDAwY20zIG9mIGFuIGlkZWFsIGdhcyBpcyBkb3VibGVkIHdoaWxlIGl0cyBLZWx2aW4gdGVtcGVyYXR1cmUgaXMgaGFsdmVkLCB0aGVuIHRoZSBuZXcgdm9sdW1lIG9mIHRoZSBnYXMgd2lsbCBiZWNvbWUgXG4iICsgIkEuXHQyNSBjbTMgXG4iICsgIkIuXHQ1MCBjbTNcbiIgKyAiQy5cdDEwMCBjbTNcbiIgKyAiRC5cdDIwMCBjbTNcbiIgKyAiRS5cdDQwMCBjbTNcbiIgKyAiXG4iICsgIjE1LiBcdEEgdHJhaW4gaGFzIGFuIGluaXRpYWwgdmVsb2NpdHkgb2YgNDRtL3MgYW5kIGFuIGFjY2VsZXJhdGlvbiBvZiDigJM0bS9zMi4gSXRzIHZlbG9jaXR5IGFmdGVyIDEwIHNlY29uZHMgaXNcbiIgKyAiQS5cdDJtL3MgXG4iICsgIkIuXHQgNG0vcyBcbiIgKyAiQy5cdCA4bS9zIFxuIiArICJELiBcdDEybS9zIFxuIiArICJFLiBcdDE2bS9zLlxuIiArICJcbiIgKyAiMTYuIFx0V2hpY2ggb2YgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZSBuZWNlc3NhcnkgYW5kIHN1ZmZpY2llbnQgZm9yIHRvdGFsIGludGVybmFsIHJlZmxlY3Rpb24gdG8gdGFrZSBwbGFjZSBhdCB0aGUgYm91bmRhcnkgYmV0d2VlbiB0d28gb3B0aWNhbCBtZWRpYT8gXG4iICsgIkkgXHRMaWdodCBpcyBwYXNzaW5nIGZyb20gb3B0aWNhbGx5IGRlbnNlciBtZWRpdW0gdG8gb3B0aWNhbGx5IGxlc3MgZGVuc2UgbWVkaXVtLiBcbiIgKyAiSUkgXHRMaWdodCBpcyBwYXNzaW5nIGZyb20gb3B0aWNhbGx5IGxlc3MgZGVuc2UgbWVkaXVtIHRvIG9wdGljYWxseSBkZW5zZXIgbWVkaXVtLlxuIiArICJJSUkgXHRBbmdsZSBvZiBpbmNpZGVuY2UgaXMgZ3JlYXRlci4gXG4iICsgIklWIFx0QW5nbGUgb2YgaW5jaWRlbmNlIGlmIGxlc3Nlci5cbiIgKyAiQS4gXHRJIGFuZCBJSSBvbmx5IFxuIiArICJCLiBcdElJIGFuZCBJSSBvbmx5IFxuIiArICJDLiBcdElJSSBhbmQgSVYgb25seSBcbiIgKyAiRC5cdEkgYW5kIElJSSBvbmx5IFxuIiArICJFLiBcdElJIGFuZCBJdiBvbmx5XG4iICsgIlxuIiArICIxNy4gXHRBIG1hbiBvZiBtYXNzIDUwa2cgYXNjZW5kcyBhIGZsaWdodCBvZiBzdGFpcnMgNW0gaGlnaCBpbiA1IHNlY29uZHMuIElmIGFjY2VsZXJhdGlvbiBkdWUgdG8gZ3Jhdml0eSBpcyAxMG1zLTIsIHRoZSBwb3dlciBleHBlbmRlZCBpcyBcbiIgKyAiQS4gXHQxMDBXIFxuIiArICJCLiBcdDMwMFcgXG4iICsgIkMuIFx0MjUwVyBcbiIgKyAiRC4gXHQ0MDBXIFxuIiArICJFLiBcdDUwMFdcbiIgKyAiXG4iICsgIjE4LiBcdFdoaWNoIG9mIHRoZSBmb2xsb3dpbmcgYXJyYW5nZW1lbnRzIGluIHRoZSBzZXF1ZW5jZSBzaG93biBjYW4gYmUgdXNlZCB0byBvYnRhaW4gYSBwdXJlIHNwZWN0cnVtIG9mIHdoaXRlIGxpZ2h0PyBcbiIgKyAiQS5cdFNvdXJjZSwgc2xpdCwgY29udmVyZ2luZyBsZW5zLCBwcmlzbSwgY29udmVyZ2luZyBsZW5zLCBzY3JlZW4uIFxuIiArICJCLiBcdFNvdXJjZSwgc2xpdCwgZGl2ZXJnaW5nIGxlbnMsIHNjcmVlbi4gXG4iICsgIkMuIFx0U291cmNlLCBjb252ZXJnaW5nIGxlbnMsIHByaXNtLCBkaXZlcmdpbmcgbGVucywgc2NyZWVuLiBcbiIgKyAiRC4gXHRTb3VyY2UsIHNsaXQsIHByaXNtLCBkaXZlcmdpbmcgbGVucywgc2NyZWVuXG4iICsgIlxuIiArICIxOS4gIFxuIiArICJcbiIgKyAiRmlnLiAzLlxuIiArICJUaGUgZGlhZ3JhbXMgaW4gRmlnLjMgc2hvdyB0aHJlZSBjaXJjdWl0cy4gVGhlIGludGVybmFsIHJlc2lzdGFuY2VzIG9mIHRoZSBiYXR0ZXJpZXMgYXJlIG5lZ2xpZ2libGUuIFdoaWNoIG9mIHRoZSBjdXJyZW50cyBpcyB0aGUgbGFyZ2VzdD8gXG4iICsgIkEuIFx0STEgXG4iICsgIkIuIFx0STIgXG4iICsgIkMuIFx0STNcbiIgKyAiRC4gXHRJNCBcbiIgKyAiRS4gXHRJNVxuIiArICJcbiIgKyAiMjAuIFx0QSBtaWxsaWFtZXRlciB3aXRoIGZ1bGwgc2NhbGUgZGVmbGVjdGlvbiBvZiAxMDBtQSBoYXMgYW4gaW50ZXJuYWwgcmVzaXN0YW5jZSBvZiA1IG9obXMuIEl0IHdvdWxkIGJlIGNvbnZlcnRlZCB0byBhbiBhbW1ldGVyIHdpdGggYSBmdWxsIHNjYWxlIGRlZmxlY3Rpb24gb2YgMUEgYnkgY29ubmVjdGluZyBhIHJlc2lzdGFuY2Ugb2ZcbiIgKyAiQS4gXHQ1Lzk5IG9obSBpbiBzZXJpZXMgd2l0aCBpdCBcbiIgKyAiQi4gXHQ1Lzk5IG9obSBpbiBwYXJhbGxlbCB3aXRoIGl0XG4iICsgIkMuXHQ5OS81IG9obSBpbiBwYXJhbGxlbCB3aXRoIGl0IFxuIiArICJELiBcdDk5LzUgb2htIGluIHNlcmllcyB3aXRoIGl0IFxuIiArICJFLiBcdDIgb2htcyBpbiBzZXJpZXMgd2l0aCBpdFxuIiArICJcbiIgKyAiMjEuIFx0SXQgaXMgdXN1YWwgdG8gdHJhbnNtaXQgZWxlY3RyaWMgcG93ZXIgYXQgaGlnaCB2b2x0YWdlIGFuZCBsb3cgY3VycmVudC4gV2hpY2ggb2YgdGhlIGZvbGxvd2luZyBhcmUgcG9zc2libGUgYWR2YW50YWdlcyBvZiB0aGUgbWV0aG9kLlxuIiArICIgSSBcdEhlYXQgbG9zc2VzIGFyZSByZWR1Y2VkIGJlY2F1c2UgdGhlIGN1cnJlbnRzIGFyZSBzbWFsbC4gXG4iICsgIklJIFx0VGhpbiB3aXJlcyBjYW4gYmUgdXNlZCBiZWNhdXNlIHNtYWxsIGN1cnJlbnRzIGFyZSBmbG93aW5nLiBcbiIgKyAiSUlJIFx0VGhlIHBvd2VyIGNhbiBmbG93IGZhc3RlciBiZWNhdXNlIHRoZSB2b2x0YWdlIGlzIGhpZ2guIFxuIiArICJBLlx0SSBvbmx5IFxuIiArICJCLiBcdEkgYW5kIElJIG9ubHkgXG4iICsgIkMuXHRJSSBhbmQgSUlJIG9ubHkgXG4iICsgIkQuXHRJIGFuZCBJSUkgb25seVxuIiArICJFLlx0SSwgSUkgYW5kIElJSS5cbiIgKyAiXG4iICsgIjIyLiBcdFRoZSBsaW5lYXIgZXhwYW5zaXZpdHkgb2YgYnJhc3MgaXNcbiIgKyAiMiB4IDEwLTEwQy0xLiBJZiB0aGUgdm9sdW1lIG9mIGEgcGllY2Ugb2YgYnJhc3MgaXMgMTAwY20zIGF0IDAwQywgd2hhdCB3aWxsIGJlIGl0cyB2b2x1bWUgYXQgMTAwMEM/IFxuIiArICJcbiIgKyAiQS4gIFx0MTAuMDIgY20zXG4iICsgIkIuIFx0MTAuMDQgY20zXG4iICsgIkMuIFx0MTAuMDYgY20zXG4iICsgIkQuICBcdDEwLjIwIGNtM1xuIiArICJFLiBcdDEwMi4wMCBjbTNcbiIgKyAiXG4iICsgIjIzLiBcdEEgMjRWIHBvdGVudGlhbCBkaWZmZXJlbmNlIGlzIGFwcGxpZWQgYWNyb3NzIGEgcGFyYWxsZWwgY29tYmluYXRpb24gb2YgZm91ciA2LW9obSByZXNpc3RvcnMuIFRoZWN1cnJlbnRzIGluIGVhY2ggcmVzaXN0b3IgaXNcbiIgKyAiQS4gIFx0MSBBIFxuIiArICJCLiAgXHQ0IEEgXG4iICsgIkMuIFx0MTYgQSBcbiIgKyAiRC4gXHQxOCBBIFxuIiArICJFLiBcdDM2IEFcbiIgKyAiXG4iICsgIjI0LiBcdEluIHRoZSBjaXJjdWl0IHNob3duIGluIEZpZy4gNCwgVCBpcyBhIHJlc2lzdG9yIHdob3NlIHJlc2lzdGFuY2UgZmFsbHMgYXMgdGVtcGVyYXR1cmUgaW5jcmVhc2VzLiBMMSBhbmQgTDIgYXJlIGxhbXBzLiBBc3N1bWluZyB0aGUgY2VsbCBoYXMgbmVnbGlnaWJsZSBpbnRlcm5hbCByZXNpc3RhbmNlLCBhcyB0aGUgdGVtcGVyYXR1cmUgb2YgVCBpbmNyZWFzZXMgXG4iICsgIkEuIFx0TDEgYmVjb21lcyBicmlnaHRlciwgTDIgYmVjb21lcyBkaW1tZXIuIFxuIiArICJCLiBcdEwxIGFuZCBMMmJlY29tZXMgYnJpZ2h0ZXIuIFxuIiArICJDLiBcdEwxIGJlY29tZXMgZGltbWVyLCBMMiBiZWNvbWVzIGJyaWdodGVyLiBcbiIgKyAiRC4gXHRMMSBiZWNvbWVzIGJyaWdodGVyLCBMMiBkb2VzIG5vdCBjaGFuZ2UuIFxuIiArICJFLiBcdEwyIGJlY29tZXMgZGltbWVyLCBMMSBkb2VzIG5vdCBjaGFuZ2UuXG4iICsgIlxuIiArICJcbiIgKyAiXG4iICsgIjI1LiBcdFdoaWNoIG9mIHRoZSBkaWFncmFtcyBpbiBGaWcuIDUgZ2l2ZXMgdGhlIGNvcnJlY3QgcmVzdWx0YW50IFIgb2YgdHdvIHZlY3RvcnMgUCBhbmQgUT8gICAgICAgXG4iICsgIlxuIiArICJBLlx0IEkgXG4iICsgIkIuIFx0SUkgXG4iICsgIkMuIFx0SUlJIFxuIiArICJELiBcdElWIFxuIiArICJFLiBcdFZcbiIgKyAiXG4iICsgIlxuIiArICIyNi4gXHRUaGUgZWxlY3Ryb2NoZW1pY2FsIGVxdWl2YWxlbnQgb2YgYSBtZXRhbCBpcyAwLjEyNiB4IDEwLTYga2cvQy4gVGhlIG1hc3Mgb2YgdGhlIG1ldGFsIHRoYXQgYSBjdXJyZW50IG9mIDVBIGRlcG9zaXQgZnJvbSBhIHN1aXRhYmxlIGJhdGggaW4gMSBob3VyIGlzIFxuIiArICJBLiBcdDAuMDM3OCB4IDEwLTNrZyBcbiIgKyAiQi5cdDAuMjI3IHggMTAtM2tnIFxuIiArICJDLiBcdDAuMzc4IHggMTAtM2tnIFxuIiArICJELiBcdDAuNTk1IHggMTAtM2tnIFxuIiArICJFLiBcdDIuMjY4IHggMTAtM2tnXG4iICsgIlxuIiArICIyNy4gXHRSaXBwbGVzIG9uIHdhdGVyIGFyZSBzaW1pbGFyIHRvIGxpZ2h0IHdhdmVzIGluIHRoYXQgdGhleSBib3RoIFxuIiArICJBLiBcdEhhdmUgdGhlIHNhbWUgd2F2ZWxlbmd0aCBcbiIgKyAiQi4gXHRBcmUgbG9uZ2l0dWRpbmFsIFxuIiArICJDLiBcdENhbm5vdCBiZSByZWZsZWN0ZWQgXG4iICsgIkQuIFx0VHJhdmVsIGF0IHRoZSBzYW1lIHNwZWVkXG4iICsgIkUuIFx0Q2FuIGJlIHJlZnJhY3RlZCBhbmQgZGlmZnJhY3RlZC5cbiIgKyAiXG4iICsgIjI4LiBcdEEgcGllY2Ugb2Ygd29vZCBpcyBmbG9hdGluZyBvbiB3YXRlci4gVGhlIGZvcmNlcyBhY3Rpbmcgb24gdGhlIHdvb2QgYXJlXG4iICsgIlx0QS4gXHRVcHRocnVzdCBhbmQgcmVhY3Rpb24uIFxuIiArICJCLiBcdFdlaWdodCBhbmQgcmVhY3Rpb24gXG4iICsgIkMuIFx0V2VpZ2h0IGFuZCB1cHRocnVzdFxuIiArICJELiBcdFVwdGhyc3V0IGFuZCB2aXNjb3NpdHkgXG4iICsgIkUuXHRXZWlnaHQgYW5kIHZpc2Nvc2l0eS5cbiIgKyAiXG4iICsgIjI5Llx0T2YgdGhlIGZvbGxvd2luZyBkZXJpdmVkIHVuaXRzLCB0aGUgb25lIHRoYXQgaXMgbm90IGEgdW5pdCBvZiBwb3dlciBpc1xuIiArICJcdEEuIFx0Sm91bGUvc2Vjb25kIFxuIiArICJCLiBcdEFtcGVyZS92b2x0IFxuIiArICJDLiBcdEFtcGhlcmUydm9sdCBcbiIgKyAiRC4gXHRPaG0yL3ZvbHQgXG4iICsgIkUuXHQgVm9sdHMyL29obS5cbiIgKyAiXG4iICsgIjMwLlx0QSBmb3JjZSBvZiAxNk4gYXBwbGllZCB0byBhIDQuMGtnIGJsb2NrIHRoYXQgaXMgYXQgcmVzdCBvbiBhIHNtb290aCBob3Jpem9udGFsIHN1cmZhY2UuIFdoYXQgaXMgdGhlIHZlbG9jaXR5IG9mIHRoZSBibG9jayBhdCB0ID0gNSBzZWNvbmRzPyBcbiIgKyAiQS4gIFx0NCBtL3NcbiIgKyAiXHRCLiBcdDEwIG0vcyBcbiIgKyAiQy4gXHQyMCBtL3MgXG4iICsgIkQuIFx0NTAgbS9zIFxuIiArICJFLiBcdDgwIG0vc1xuIiArICJcbiIgKyAiMzEuIFx0MSwwMDAgaWRlbnRpY2FsIGRyb3BzIG9mIG9pbCBvZiBkZW5zaXR5IDUwMDBrZy9tMyBoYXZlIGEgdG90YWwgbWFzcyBvZiA1IHggMTAtNGtnLiBPbmUgb2YgdGhlIGRyb3BzIGZvcm1zIGEgdGhpbiBmaWxtIG9mIGFyZWEgMC41bTIgb24gd2F0ZXIuIFRoZSB0aGlja25lc3Mgb2YgdGhlIGZpbG0gaXNcbiIgKyAiIEEuIFx0MiB4IDEwLThtXG4iICsgIkIuXHQyIHggMTAtOW1cbiIgKyAiQy4gXHQyIHggMTAtN21cbiIgKyAiRC4gXHQzIHggMTAtOW0gXG4iICsgIkUuIFx0Mi44IHggMTAtOG0uXG4iICsgIlxuIiArICIzMi4gXHRUaGUgdG90YWwgbGVuZ3RoIG9mIGEgc3ByaW5nIHdoZW4gYSBtYXNzIG9mIDIwMGcgaXMgaHVuZyBmcm9tIGl0cyBlbmQgaXMgMTRjbSwgd2hpbGUgaXRzIHRvdGFsIGxlbmd0aCBpcyAxNmNtIHdoZW4gYSBtYXNzIG9mIDMwa2cgaXMgaHVuZyBmcm9tIHRoZSBzYW1lZW5kLiBDYWxjdWxhdGUgdGhlIHVuc3RyZXRjaGVkIGxlbmd0aCBvZiB0aGUgc3ByaW5nIGFzc3VtaW5nIEhvb2tl4oCZcyBsYXcgaXMgb2JleWVkLlxuIiArICJBLiBcdCA5LjMzIGNtXG4iICsgIkIuIFx0MTAuMDAgY20gXG4iICsgIkMuIFx0MTAuNjYgY21cbiIgKyAiRC4gXHQxMi4wMCBjbSBcbiIgKyAiRS4gXHQxNS4wMCBjbVxuIiArICJcbiIgKyAiMzMuIFx0RWFjaCBvZiB0aGUgZGlhZ3JhbXMgaW4gRmlnLiA2IHJlcHJlc2VudHMgdHdvIGN1cnJlbnQgY2FycnlpbmcgY29uZHVjdG9ycyBzaXR1YXRlZCBjbG9zZSB0byBlYWNoIG90aGVyLiBJbiB3aGljaCB0d28gZGlhZ3JhbXMgYXJlIHRoZSBmb3JjZXMgYmV0d2VlbiB0aGUgdHdvIHdpcmVzIGF0dHJhY3RpdmU/ICAgICAgICAgIFxuIiArICJcbiIgKyAiXG4iICsgIkEuIFx0SSBhbmQgViBcbiIgKyAiQi4gXHRJIGFuZCBJSUkgXG4iICsgIkMuIFx0SUkgYW5kIElWXG4iICsgIkQuIFx0SUkgYW5kIFYgXG4iICsgIkUuIFx0SUlJIGFuZCBJVlxuIiArICJcbiIgKyAiMzQuIFx0V2hpY2ggb2YgdGhlIGZvbGxvd2luZyBzdGF0ZW1lbnRzIGlzIENPUlJFQ1Q/IFxuIiArICJJIFx0VGhlIG1hc3MgbnVtYmVyIGlzIGVxdWFsIHRvIHRoZSB0b3RhbCBudW1iZXIgb2YgcHJvdHJvbnMgYW5kIGVsZWN0cm9ucyBpbiBhbiBhdG9tLlxuIiArICJJSSBcdFRoZSBhdG9taWMgbnVtYmVyIGlzIGVxdWFsIHRvIHRoZSBudW1iZXIgb2YgcHJvdHJvbnMgaW4gYW4gYXRvbSBcbiIgKyAiSUlJIFx0VGhlIG51bWJlciBvZiBlbGVjdHJvbnMgaW4gYW4gYXRvbSBpcyBlcXVhbCB0byB0aGUgdG90YWwgbnVtYmVyIG9mIHByb3RvbnMgYW5kIG5ldXRyb25zIGluIHRoZSBudWNsZXVzLiBcbiIgKyAiQS4gXHRJIG9ubHlcbiIgKyAiQi4gXHRJSSBvbmx5IFxuIiArICJDLiBcdElJSSBvbmx5IFxuIiArICJELlx0SSBhbmQgSUkgb25seSBcbiIgKyAiRS4gXHRJSSBhbmQgSUlJIG9ubHkuXG4iICsgIlxuIiArICIzNS4gXHRBIHNob3J0IHJlc3BvbnNlIHRpbWUgaXMgb2J0YWluZWQgaW4gYSBsaXF1aWQtaW4tIGdsYXNzIHRoZXJtb21ldGVyIHdoZW4gdGhlXG4iICsgIkEuIFx0QnVsYiBpcyBsYXJnZSBhbmQgdGhpY2std2FsbGVkLiBcbiIgKyAiQi4gXHRTdGVtIGlzIGxvbmcgYW5kIHRoaW4uIFxuIiArICJDLiBcdEJ1bGIgaXMgc21hbGwgYW5kIHRoaWNrLXdhbGxlZC4gXG4iICsgIkQuIFx0QnVsYiBpcyBoaWdoIGRlbnNpdHkgYW5kIHRoZSBib3JlIGlzIGxhcmdlLiBcbiIgKyAiRS4gXHRCdWxiIGlzIHRoaW4td2FsbGVkIGFuZCB0aGUgbGlxdWlkIGlzIGEgZ29vZCBjb25kdWN0b3Igb2YgaGVhdC5cbiIgKyAiXG4iICsgIjM2LiBcdEEgbWFjaGluZSBoYXMgYSB2ZWxvY2l0eSByYXRpbyBvZiA1LiBJdCByZXF1aXJlcyBhIDUwa2cgd2VpZ2h0IHRvIG92ZXJjb21lIGEgMjAwa2cgd2VpZ2h0LiBUaGUgZWZmaWNpZW5jeSBpcyBcbiIgKyAiQS4gIFx0NCUgXG4iICsgIkIuIFx0NSVcbiIgKyAiXHRDLiBcdDQwJSBcbiIgKyAiRC4gXHQ1MCUgXG4iICsgIkUuIFx0ODAlXG4iICsgIlxuIiArICIzNy5cdCBJZiB0aGUgbm9ybWFsIGF0bW9zcGhlcmljIHByZXNzdXJlIGluIGEgbGFib3JhdG9yeSBzdXBwb3J0cyBhIGNvbHVtbiBvZiBtZXJjdXJ5IDAuNzZtIGhpZ2ggYW5kIHRoZSByZWxhdGl2ZSBkZW5zaXR5IG9mIG1lcmN1cnkgaXMgMTMuOCwgdGhlbiB0aGUgaGVpZ2h0IG9mIHdhdGVyIGNvbHVtbiB3aGljaCBhdG1vc3BoZXJpYyBwcmVzc3VyZSB3aWxsIHN1cHBvcnQgaW4gdGhlIHNhbWUgbGFib3JhdG9yeSBhdCB0aGUgc2FtZSB0aW1lIGlzIFxuIiArICJBLiAgXHQwIG0gXG4iICsgIkIuIFx0MTAgbSBcbiIgKyAiQy4gXHQxMyBtIFxuIiArICJELiBcdDE0IG0gXG4iICsgIkUuIFx0MTggbVxuIiArICJcbiIgKyAiMzguIFx0QW4gZWxlY3RyaWMgY3VycmVudCBvZiAzQSBmbG93aW5nIHRocm91Z2ggYW4gZWxlY3RyaWMgaGVhdGluZyBlbGVtZW50IG9mIHJlc2lzdGFuY2UgMjAgZW1iZWRkZWQgaW4gMSwwMDBnIG9mIGFuIG9pbCByYWlzZXMgdGhlIHRlbXBlcmF0dXJlIG9mIHRoZSBvaWwgYnkgMTAwQyBpbiAxMCBzZWNvbmRzLCB0aGVuIHRoZSBzcGVjaWZpYyBoZWF0IGNhcGFjaXR5IG9mIHRoZSBvaWwgaXMgXG4iICsgIkEuIFx0MS44ICAgSi9nXG4iICsgIkIuIFx0MC42ICAgSi9nXG4iICsgIkMuIFx0MC4xOCBKL2cgMENcbiIgKyAiRC4gXHQxLjggICBKL2cgMENcbiIgKyAiRS4gXHQwLjA2IEovZyAwQ1xuIiArICJcbiIgKyAiMzkuIFx0VGhlIGRpZmZlcmVuY2Ugb2YgcG90ZW50aWFsIGJldHdlZW4gdGhlIHRlcm1pbmFscyBvZiBhIGNlbGwgaXMgMi4yIHZvbHRzLiBXaGVuIGEgNCBvaG0gcmVzaXN0b3IgaXMgY29ubmVjdGVkIGFjcm9zcyB0aGUgdGVybWluYWxzIG9mIHRoaXMgY2VsbCwgdGhlIHBvdGVudGlhbCBkaWZmZXJlbmNlIGlzIDIgdm9sdHMuIFdoYXQgaXMgdGhlIGludGVybmFsIHJlc2lzdGFuY2Ugb2YgdGhlIGNlbGw/XG4iICsgIlx0QS4gXHQwLjEwIG9obXMgXG4iICsgIkIuIFx0MC4yNSBvaG1zIFxuIiArICJDLiBcdDAuNDAgb2htcyBcbiIgKyAiRC4gXHQyLjUwIG9obXMgXG4iICsgIkUuIFx0NC4wMCBvaG1zLlxuIiArICJcbiIgKyAiXG4iICsgIlxuIiArICJJbiBGaWcuIDcgYWJvdmUsIFFSIGlzIGEgdmVydGljYWwgY29uZHVjdG9yIGFuZCB0aGUgY3VycmVudCBJIGZsb3dzIGZyb20gUiB0byBRLiBQIGlzIGEgcG9pbnQgb24gdGhlIGhvcml6b250YWwgcGxhbmUgYW5kIGl0IHRvIHRoZSBTb3V0aCBvZiB0aGUgd2lyZS4gVGhlIGRpcmVjdGlvbiBvZiB0aGUgbWFnbmV0aWMgZmlsZWQgYXQgUCBkdWUgdG8gdGhlIGN1cnJlbnQgaXMgXG4iICsgIkEuIFx0VXB3YXJkXG4iICsgIkIuIFx0Tm9ydGggXG4iICsgIkMuIFx0U291dGggXG4iICsgIkQuIFx0V2VzdCBcbiIgKyAiRS4gXHRFYXN0XG4iICsgIlxuIiArICJcbiIgKyAiNDIuIFx0V2hpY2ggb2YgdGhlIGZvbGxvd2luZyBzdGF0ZW1lbnRzIGNsZWFybHkgZGVzY3JpYmUgdGhlIGJlaGF2aW91ciBvZiB0aGUgZmlyZSBhbGFybSBzaG93biBpbiAgRmlnLiA4IGJlbG93IGdpdmVuIHRoYXQgdGhlIGxpbmVhciBleHBhbnNpdml0aWVzIG9mIGNvcHBlciBhbmQgc3RlZWwgYXJlIDIuMCB4IDEwLTUvMEMgYW5kIDEuMiB4IDEwLTUvMEMgcmVzcGVjdGl2ZWx5P1xuIiArICJcdFxuIiArICJJIFx0VGhlIGJpbWV0YWxsaWMgc3RyaXAgd2lsbCBub3QgYmUgYWJsZSB0byBjbG9zZSB0aGUgY2lyY3VpdCB3aGVuIHRoZXJlIGlzIGZpcmUgXG4iICsgIklJIFx0VGhlIGJpbWV0YWxsaWMgc3RyaXAgd2lsbCBjbG9zZSB0aGUgY2lyY3VpdCB3aGVuIHRoZXJlIGlzIGZpcmUgXG4iICsgIklJSSBcdElmIHRoZSBjb3BwZXIgYW5kIHN0ZWVsIGFyZSBpbnRlcmNoYW5nZWQsIHRoZSBjaXJjdWl0IHdpbGwgY2xvc2Ugd2hlbiB0aGVyZSBpcyBmaXJlLiBcbiIgKyAiXG4iICsgIkEuIFx0SSBvbmx5IFxuIiArICJCLiBcdElJIG9ubHkgXG4iICsgIkMuIFx0SUlJIG9ubHkgXG4iICsgIkQuIFx0SSBhbmQgSUlJIFxuIiArICJFLiBcdElJIGFuZCBJSUlcbiIgKyAiNDMuIFx0Rm91ciBlcXVhbCByZXNpc3RvcnMgUjEsIFIyLCBSMyBhbmQgUjQgYXJlIGNvbm5lY3RlZCBpbiBzZXJpZXMgYXMgc2hvd24gaW4gRmlnIDkgYmVsb3cuIFYxLCBWMiBhbmQgVjMgYXJlIHZvbHRtZXRlcnMgY29ubmVjdGVkIGFzIGluZGljYXRlZC4gV2hpY2ggb2YgdGhlIGZvbGxvd2luZyByZWxhdGlvbnMgaXMgQ09SUkVDVD9cbiIgKyAiXG4iICsgIlxuIiArICI0NC5cdCBXaGljaCBvZiB0aGUgZm9sbG93aW5nIG1heSBiZSB1c2VkIHRvIGRldGVybWluZSByZWxhdGl2ZSBodW1pZGl0eSBpbiBhIHBoeXNpY3MgbGFib3JhdG9yeT8gXG4iICsgIkkgXHRNYW5vbWV0ZXIgXG4iICsgIklJIFx0V2V0LWFuZC1kcnkgYnVsYiBoeWdyb21ldGVyIFxuIiArICJJSUkgXHRIYWlyIGh5Z3JvbWV0ZXIgXG4iICsgIklWIFx0QSBoeWRyb21ldGVyXG4iICsgIlxuIiArICJBLlx0IEkgb25seSBcbiIgKyAiQi4gXHRJSSBhbmQgSUlJIG9ubHkgXG4iICsgIkMuIFx0SUkgb25seSBcbiIgKyAiRC4gXHRJSUkgb25seSBcbiIgKyAiRS4gXHRJSSwgSUlJIGFuZCBJViBvbmx5XG4iICsgIlxuIiArICJcbiIgKyAiUFEgaXMgYSB0aGluIHJvZCBvbiBhIGhvcml6b250YWwgdGFibGUsIFJTIGlzIGEgcGxhbmUgbWlycm9yIGluY2xpbmVkIGF0IDQ1MEMgdG8gdGhlIGhvcml6b250YWwgYXMgc2hvd24gaW4gRmlnLiAxMCBhYm92ZS4gVGhlIGltYWdlIG9mIFBRIGFzIHNlZW4gaW4gdGhlIG1pcnJvciBieSB0aGUgZXllLCBUIGlzIFxuIiArICJBLiBcdEhvcml6b250YWwgXG4iICsgIkIuIFx0UGFyYWxsZWwgdG8gdGhlIG1pcnJvciBcbiIgKyAiQy4gXHRBdCBpbmZpbml0eSBcbiIgKyAiRC4gXHRWZXJ0aWNhbFxuIiArICJFLiBcdEhpZ2hseSBtYWduaWZpZWQuXG4iICsgIlxuIiArICI0Ni4gXHRUaGUgc3BlZWQgb2YgbGlnaHQgaW4gdmFjdXVtIGlzIDMuMCB4IDEwOG1zLTEuIElmIHRoZSByZWZyYWN0aXZlIGluZGV4IG9mIGEgdHJhbnNwYXJlbnQgbGlxdWlkIGlzIDQvMyB0aGVuIHRoZSBzcGVlZCBvZiBsaWdodCBpbiB0aGUgbGlxdWlkIGlzIFxuIiArICJBLiBcdDAuNDQgeCAxMDhtIHMtMVxuIiArICJCLiBcdDIuMjUgeCAxMDhtIHMtMVxuIiArICJDLiBcdDMuMCB4IDEwOG0gcy0xXG4iICsgIkQuIFx0NC4wIHggMTA4bSBzLTFcbiIgKyAiRS4gXHQ0LjMzIHggMTA4bSBzLTFcbiIgKyAiXG4iICsgIlxuIiArICJcbiIgKyAiNDcuIFx0SWYgdGhlIGZvcmNlIG9uIGEgY2hhcmdlIG9mIDAuMiBjb3Vsb21iIGluIGFuIGVsZWN0cmljIGZpZWxkIGlzIDROLCB0aGVuIHRoZSBlbGVjdHJpYyBmaWVsZCBpbnRlbnNpdHkgb2YgdGhlIGZpZWxkIGlzIFxuIiArICJBLiAgXHQwLjggXG4iICsgIkIuICBcdDAuOCBOL0NcbiIgKyAiQy4gXHQyMC4wIE4vQ1xuIiArICJELiAgXHQ0LjIgTi9DXG4iICsgIkUuIFx0MjAuMCBDL05cbiIgKyAiXG4iICsgIjQ4Llx0VGhlIHNwZWNpZmljIGxhdGVudCBoZWF0IG9mIHZhcG91cml6YXRpb24gb2YgYSBzdWJzdGFuY2UgaXMgYWx3YXlzIFxuIiArICJBLiBMZXNzIHRoYW4gaXRzIHNwZWNpZmljIGxhdGVudCBoZWF0IG9mIGZ1c2lvbi4gXG4iICsgIkIuIFx0R3JlYXRlciB0aGFuIGl0cyBzcGVjaWZpYyBoZWF0IG9mIGZ1c2lvbi4gXG4iICsgIkMuIFx0RXF1YWwgdG8gaXRzIHNwZWNpZmljIGxhdGVudCBoZWF0IG9mIGZ1c2lvbiBcbiIgKyAiRC4gXHRBbGwgb2YgdGhlIGFib3ZlIGRlcGVuZGluZyBvbiB0aGUgbmF0dXJlIG9mIHRoZSBzdWJzdGFuY2UgRS4gTm9uZSBvZiB0aGUgYWJvdmVcbiIgKyAiXG4iICsgIjQ5LiBcdExvbmdpdHVkaW5hbCB3YXZlcyBkbyBub3QgZXhoaWJpdCBcbiIgKyAiQS4gXHRSZWZyYWN0aW9uXG4iICsgIlx0Qi4gXHRSZWZsZWN0aW9uIFxuIiArICJDLiBcdERpZmZyYWN0aW9uIFxuIiArICJELiBcdFBvbGFyaXphdGlvbiBcbiIgKyAiRS4gXHRSYXJlZmFjdGlvblxuIiArICJcbiIgKyAiXG4iICsgIlxuIiArICJcbiIgKyAiXG4iICsgIjUwLlx0XG4iICsgIlxuIiArICJGaWcuIDExIGFib3ZlIHNob3dzIGFuIGludmVydGVkIFUtdHViZSB3aXRoIHRoZSBvcGVuIGVuZCwgTyBvZiBvbmUgbGltYiBiZWxvdyB0aGUgbGV2ZWwsIFcsIG9mIHRoZSB3YXRlciBpbiBhIHRhbmsuIEluIG9yZGVyIHRoYXQgd2F0ZXIgc2hvdWxkIGJlZ2luIHRvIGZsb3cgZnJvbSB0aGUgdGFuayBpdCBpcyBuZWNlc3NhcnkgdGhhdCBcbiIgKyAiQS4gXHRUaGUgVS10dWJlIGlzIGNvbXBsZXRlbHkgZmlsbGVkIHdpdGggd2F0ZXIgYW5kIFAgc2hvdWxkIGJlIGhpZ2hlciB0aGFuIFcuIFxuIiArICJCLlx0IFAgc2hvdWxkIGJlIGxvd2VyIHRoYW4gTyBhbmQgVyBDLiBQIHNob3VsZCBiZSBsb3dlciB0aGFuIFcgYW5kIE8gc2hvdWxkIHJlYWNoIHRvIHRoZSBib3R0b20gb2YgdGhlIHZlc3NlbC4gXG4iICsgIkQuIFx0VGhlIFUtdHViZSBpcyBjb21wbGV0ZWx5IGZpbGxlZCB3aXRoIHdhdGVyIGFuZCBQIHNob3VsZCBiZSBsb3dlciB0aGFuIFcuIFxuIiArICJFLiBcdFRoZSBVLXR1YmUgaXMgY29tcGxldGVseSBmaWxsZWQgd2l0aCB3YXRlciBhbmQgTyBzaG91bGQgcmVhY2ggdGhlIGJvdHRvbSBvZiB0aGUgdmVzc2VsLiIK</text>
      </register>
      <register name="-" type="4">
        <text>Seq</text>
      </register>
    </registers>
    <search>
      <last-dir>0</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search />
      <history-cmd />
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>